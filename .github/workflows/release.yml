name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: read
  packages: write

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.12'

      - name: Install build backend
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build sdist/wheel
        run: python -m build

      - name: Twine check
        run: twine check dist/*

      - name: Publish to PyPI
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: twine upload --skip-existing dist/*

      - name: Publish to GitHub Packages
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TWINE_USERNAME: ${{ github.actor }}
          GH_PACKAGES_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
        run: |
          if [ -n "${GH_PACKAGES_TOKEN}" ]; then
            export TWINE_PASSWORD="${GH_PACKAGES_TOKEN}"
          else
            export TWINE_PASSWORD="${GITHUB_TOKEN}"
          fi
          if [ -z "${TWINE_PASSWORD}" ]; then
            echo "No GitHub Packages token available; skipping upload.";
            exit 0;
          fi
          twine upload --repository-url https://pip.pkg.github.com/${{ github.repository_owner }}/legacy/ dist/*
