name: Codex Auto-Fix (on CI failure)

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]

permissions:
  contents: write
  pull-requests: write

jobs:
  codex_autofix:
    if: ${{ github.event.workflow_run.conclusion == 'failure' && github.event.workflow_run.head_repository.full_name == github.repository && (github.event.workflow_run.event == 'push' || github.event.workflow_run.event == 'pull_request') }}
    runs-on: ubuntu-latest
    env:
      FAILED_WORKFLOW: ${{ github.event.workflow_run.name }}
      FAILED_URL: ${{ github.event.workflow_run.html_url }}
      FAILED_BRANCH: ${{ github.event.workflow_run.head_branch }}
      FAILED_SHA: ${{ github.event.workflow_run.head_sha }}

    steps:
      - name: Checkout the failing commit
        uses: actions/checkout@v5
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Try tests locally (non-blocking)
        run: |
          python -m pip install --upgrade pip
          pip install -e .[test,dev]
          pytest -q || true
          ruff check . || true
          mypy --ignore-missing-imports amp_benchkit || true

      - name: Run Codex to fix the failure (disabled by policy)
        run: |
          echo "Skipping openai/codex-action due to org action policy."
          echo "You can run fixes locally or replace with an allowed internal action."

      - name: Create and push branch with changes
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          BRANCH="codex/autofix-${FAILED_BRANCH}-${FAILED_SHA:0:7}"
          git checkout -b "$BRANCH"
          git add -A
          if git diff --staged --quiet; then
            echo "No changes from Codex; exiting."
            exit 0
          fi
          git commit -m "Codex auto-fix for failing CI on '${FAILED_BRANCH}' (${FAILED_SHA:0:7})"
          git push origin "$BRANCH"

      - name: Open pull request
        uses: actions/github-script@v7
        with:
          script: |
            const shortSha = process.env.FAILED_SHA.substring(0,7);
            const branch = `codex/autofix-${process.env.FAILED_BRANCH}-${shortSha}`;
            const title = `Codex auto-fix for failing CI on '${process.env.FAILED_BRANCH}'`;
            const body = `This PR was created automatically after CI failed.\n\n- Workflow: **${process.env.FAILED_WORKFLOW}**\n- Run: ${process.env.FAILED_URL}\n- Commit: ${process.env.FAILED_SHA}\n\nPlease review the changes generated by Codex.`;
            const base = process.env.FAILED_BRANCH;
            try {
              const { data: pr } = await github.rest.pulls.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title,
                head: branch,
                base,
                body,
              });
              core.info(`PR created: ${pr.html_url}`);
            } catch (e) {
              core.setFailed(`Failed to create PR: ${e.message}`);
            }
